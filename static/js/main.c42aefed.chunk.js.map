{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","panels/Call.js","panels/Rolf.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","fetchedUserPhone","title","before","photo_200","src","description","city","first_name","last_name","phone","size","level","onClick","data-to","top","bottom","type","placeholder","osName","platform","Persik","props","left","IOS","Call","right","Rolf","App","useState","activePanel","setActivePanel","setUser","setUserPhone","popout","setPopout","useEffect","a","connect","sendPromise","user","send","userphone","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","activeView","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c42aefed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport FormLayout from \"@vkontakte/vkui/dist/components/FormLayout/FormLayout\";\nimport FormLayoutGroup from \"@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup\";\nimport Input from \"@vkontakte/vkui/dist/components/Input/Input\";\nimport Checkbox from \"@vkontakte/vkui/dist/components/Checkbox/Checkbox\";\n\n\nconst Home = ({ id, go, fetchedUser, fetchedUserPhone }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Панель</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name} ${fetchedUserPhone.phone}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Навигашка\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t1\n\t\t\t\t</Button>\n\t\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"call\">\n\t\t\t\t2\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t\t\t<Group title=\"Навигашка\">\n\n\t\t<Div>\n                <FormLayout>\n                  <FormLayoutGroup top=\"Пароль\" bottom=\"Пароль может содержать только латинские буквы и цифры.\">\n                    <Input type=\"password\" placeholder=\"Введите пароль\" />\n                    <Input type=\"password\" placeholder=\"Повторите пароль\" />\n\t\t\t\t\t  <Checkbox> Я со всем согласен</Checkbox>\n                  </FormLayoutGroup>\n                </FormLayout>\n\t\t\t</Div>\n\t\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\tfetchedUserPhone: PropTypes.shape({\n\tphone: PropTypes.string,\n\n\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\n\nconst Call = () => (\n\t<Panel id='call'>\n\t\t<PanelHeader\n\t\t\tright={<HeaderButton >\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t\n\t</Panel>\n);\n\nCall.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\n\n\nexport default Call;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\nimport FormLayoutGroup from '@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Rolf = () => (\n\t<Panel id='phone'>\n\n\n\n\t\t\t<Div>\n                <FormLayout>\n                  <FormLayoutGroup top=\"Пароль\" bottom=\"Пароль может содержать только латинские буквы и цифры.\">\n                    <Input type=\"password\" placeholder=\"Введите пароль\" />\n                    <Input type=\"password\" placeholder=\"Повторите пароль\" />\n                  </FormLayoutGroup>\n                </FormLayout>\n\t\t\t</Div>\n\n\t</Panel>\n);\n\n\n\nexport default Rolf;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport Root from '@vkontakte/vkui/dist/components/View/View';\nimport Form from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Call from './panels/Call';\nimport Rolf from './panels/Rolf';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedUserPhone, setUserPhone] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\n\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t\tconst userphone = await connect.send(\"VKWebAppGetPersonalCard\", {\"type\": [\"phone\"]});\n\t\t\tsetUserPhone(userphone);\n\t\t\tsetPopout(null);\n\t\t}\n\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t <Root activeView=\"view\">\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} fetchedUserPhone={fetchedUserPhone} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t<Call id='call' go={go} />\n\t\t\t\t</View>\n\n\n\t\t\t <View >\n\t\t\t<Rolf id='phone'   />\n\n\n\t\t</View>\n\n\t\t\t </Root>\n\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\nconnect.send(\"VKWebAppGetPersonalCard\", {\"type\": [\"phone\", \"email\"]});\nconsole.log();\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}